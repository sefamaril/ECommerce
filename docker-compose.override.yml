# Author: Sefa Maril - Date: 04.08.2024
# Description: Override configuration for the Catalog API and MongoDB service.

services:
  catalogdb:
    image: mongo
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"
       
  discountdb:
    container_name: discountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Pass1@1Pass
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  orderdb:
    container_name: orderdb
    environment:
      SA_PASSWORD: "12345Sefa12345"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "1433:1433"
    healthcheck:
       test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P '12345Sefa12345' -Q 'select 1'"]
       interval: 10s
       timeout: 10s
       retries: 3

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672" 

  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@sefaShopping.net
      - PGADMIN_DEFAULT_PASSWORD=Pass1@1Pass
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9090:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings__ConnectionString=mongodb://catalogdb:27017"
      - "DatabaseSettings__DatabaseName=CatalogDb"
      - "DatabaseSettings__CollectionName=Products"
      - "DatabaseSettings__BrandsCollection=Brands"
      - "DatabaseSettings__TypesCollection=Types"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - catalogdb
    ports:
      - "8000:8080"
    volumes:
      - ./Services/Catalog/Catalog.Infrastructure/Data/SeedData:/app/Data/SeedData

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings__ConnectionString=basketdb:6379"
      - "GrpcSettings__DiscountUrl=http://discount.api:8080"
      - "EventBusSettings_HostAddress:amqp=//guest:guest@rabbitmq:5672" 
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - basketdb
      - rabbitmq
    ports:
      - "8001:8080"

  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings__ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=Pass1@1Pass;"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
        discountdb:
           condition: service_healthy
    ports:
      - "8002:8080"

  ordering.api:
    container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=12345Sefa12345;TrustServerCertificate=True"
      - "EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "8003:8080"
    command: >
      sh -c "sleep 30 && dotnet ef database update -c OrderContext && dotnet Ordering.API.dll"

  elasticsearch:
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"